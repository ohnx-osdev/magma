# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//packages/package.gni")
import("//magma/gnbuild/magma.gni")

group("vulkan") {
  public_deps = [
    "//third_party/vulkan_loader_and_validation_layers:vulkan",
  ]
}

package("magma-common") {
  if (build_mali_vulkan_driver || build_intel_gen_driver) {
    testonly = true
    deps = [
      ":libmagma",
      ":libvulkan",
      ":tools",
    ]

    binaries = [ {
          name = "magma_info"
        } ]

    if (build_intel_gen_driver) {
      deps += [
        "$mesa_build_root:tests",
        "$msd_intel_gen_build_root:test",
        "$msd_intel_gen_build_root:tests",
        "//magma/tests:tests",
        "//magma/tests/vkcube",
      ]
      binaries += [ {
            name = "vkcube"
          } ]
    }

    libraries = [ {
          name = "libmagma.so"
        } ]

    if (build_mali_vulkan_driver) {
      libraries += [ {
            name = "libGLES_mali.so"
          } ]
      resources = [ {
            path = rebase_path("icd/arm_icd.json")
            dest = "vulkan/icd.d/arm_icd.json"
          } ]
    }

    if (build_intel_gen_driver) {
      libraries += [ {
            name = "libvulkan_intel.so"
          } ]
      resources = [ {
            path = rebase_path("icd/intel_icd.json")
            dest = "vulkan/icd.d/intel_icd.json"
          } ]
    }
  }
}

package("magma") {
  if (build_intel_gen_driver) {
    deps = [
      "$msd_intel_gen_build_root:msd_intel",
    ]
    drivers = [ {
          # This driver is needed early in bootup (i.e. in the /boot partition)
          # so that devmgr correctly chooses it over the intel-i915.so driver on
          # hardware with supported intel GPUs.
          early_boot_driver = true
          name = "libmsd_intel.so"
        } ]
  }
}

# This config allows inclusion of headers via relative paths from src
config("magma_src_include_config") {
  include_dirs = [ "src" ]
}

# This config allows inclusion of headers via relative paths from tests
config("magma_tests_include_config") {
  include_dirs = [ "tests" ]
}

group("libmagma") {
  public_deps = [
    "src/libmagma",
  ]
}

if (build_intel_gen_driver) {
  group("libvulkan") {
    public_deps = [
      "$mesa_build_root:magma_vulkan",
    ]
  }
} else if (build_mali_vulkan_driver) {
 # copy("mali_driver") {
 #   sources = [
 #     "$root_build_dir/arm64-shared/libGLES_mali.so",
 #   ]
 #   outputs = [
 #     "$root_build_dir/arm64-shared/libvulkan_arm.so",
 #   ]
 #   deps = [
 #     "$mali_build_root:libGLES_mali",
 #   ]
 # }
  group("libvulkan") {
    public_deps = [
      "$mali_build_root:libGLES_mali",
      #":mali_driver",
    ]
  }
}

# internal only
source_set("libmsd") {
  deps = [
    "src/sys_driver",
  ]
  public_deps = [
    "include:msd_abi",
  ]
}

group("tools") {
  public_deps = [
    "src/tools",
  ]
}
